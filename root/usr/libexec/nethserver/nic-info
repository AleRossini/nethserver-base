#!/bin/bash

#
# Copyright (C) 2015 Nethesis S.r.l.
# http://www.nethesis.it - nethserver@nethesis.it
#
# This script is part of NethServer.
#
# NethServer is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License,
# or any later version.
#
# NethServer is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with NethServer.  If not, see COPYING.
#

if [ "x${1}" == "x" ]; then
    cards=($(ls -A -1 /sys/class/net))
else
    cards=($1)
fi

for card in ${cards[@]}; do

    hwaddr=
    type=
    model=
    driver=
    speed=
    link=

    # Error on non-existing devices
    if ! [ -e "/sys/class/net/${card}" ]; then
	echo "[ERROR] nic-info: interface ${card} does not exist" 1>&2
	exit 1
    fi
    
    # Skip non-Ethernet physical devices (type=1)
    if [ `cat /sys/class/net/${card}/type` != "1" ]; then
       continue
    fi

    # Skip VLANs
    if [[ "${card}" =~ "[.]" ]]; then
	continue
    fi

    # Skip bridge and tun/tap
    if [ -e /sys/class/net/${card}/brforward ] || [ -e /sys/class/net/${card}/tun_flags ]; then
        continue
    fi

    hwaddr=`cat /sys/class/net/${card}/address`
	
    # Skip if mac is not valid (00:00... or FF:FF...)
    if [ "${hwaddr}" == "00:00:00:00:00:00" ] || [ "${hwaddr}" == "ff:ff:ff:ff:ff:ff" ]; then
	continue
    fi
	
					driver=`basename $(ls -l /sys/class/net/$card/device/driver | awk '{print$NF}' )`
					type=`basename $(ls -l /sys/class/net/$card/device/subsystem | awk '{print$NF}' )`

					#Default if not avaiable in /sys/class/net
					if [ "a$type" == "a" ]; then
						type="???"
					fi
					if [ "a$driver" == "a" ]; then
						driver="Unknown Network Interface ($card)"
					fi
					#description=`echo $type: $driver`
					model=$type

					#Get more details for pci and usb devices
					if [ "$type" == "pci" ]; then
						model=`lspci -s $(basename $(ls -l /sys/class/net/$card/device | awk '{print$NF}' )) | cut -d':' -f3 | cut -c 2-`
						#description=`echo $type: $name`
					fi
					if [ "$type" == "usb" ]; then
						bus=`grep DEVICE= /sys/class/net/$card/device/uevent | cut -d"/" -f5`
						dev=`grep DEVICE= /sys/class/net/$card/device/uevent | cut -d"/" -f6`
						#work around the base8 convert
						let bus=`echo 1$bus`-1000
						let dev=`echo 1$dev`-1000
						model=`lsusb -s $bus:$dev | cut -d':' -f3 | cut -c 6-`
						#description=`echo $type: $name`
					fi
					speed=`cat /sys/class/net/$card/speed 2>/dev/null`
					link=`cat /sys/class/net/$card/carrier 2>/dev/null`


    echo $card,${hwaddr//,/ },${type//,/ },${model//,/ },${driver//,/ },$speed,$link

done

