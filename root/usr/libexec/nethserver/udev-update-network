#!/bin/bash

#
# Copyright (C) 2015 Nethesis S.r.l.
# http://www.nethesis.it - support@nethesis.it
#
# This script is part of NethServer.
#
# NethServer is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License,
# or any later version.
#
# NethServer is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with NethServer.  If not, see <http://www.gnu.org/licenses/>.
#

#
# This helper inherits environment variables from UDEV
# See for context and invocation /etc/udev/rules.d/95-NetworksDB.rules
#

devpath=/sys${1:?invalid devpath argument}
card=${2:?invalid card argument}

# Import udev functions
. /lib/udev/rule_generator.functions

# Exit now, if db directory is not writable
if ! writeable /var/lib/nethserver/db; then
    exit 1;
fi

# Exit now, if networks db has not been initialized (on boot)
if ! [ -e /var/lib/nethserver/db/networks ]; then
    exit 1;
fi

# Check device is not virtual (lo, br ...)
if [[ "${devpath}" == */virtual/* ]]; then
    echo "[INFO] update-networks-db: skipping virtual ${devpath}" 1>&2
    exit 0;
fi

#
# card has gone away: clear the role prop
# Must check at this point because the next tests would fail without device path
#
if [ "${ACTION}" == "remove" ]; then
    echo "[INFO] update-networks-db: card removed, ${card}" 1>&2
    exit 0;
fi

# Check if this is an Ethernet device (type=1)
if [ "$(cat "${devpath}/type" 2>/dev/null)" != "1" ]; then
    echo "[INFO] update-networks-db: skipping non-ethernet ${devpath}" 1>&2
    exit 0;
fi

# FIXME: Check if is a physical device
if ! [ -e "${devpath}/device" ]; then
    echo "[INFO] update-networks-db: skipping non-device ${devpath}" 1>&2
    exit 0;
fi

#
# Note: the add action is invoked also before move, to rename interfaces
#
if [ "${ACTION}" == "add" ] && [ -z "$(/sbin/e-smith/db networks get ${card})" ]; then
    echo "[INFO] update-networks-db: card added, ${card}" 1>&2
    /sbin/e-smith/db networks set "${card}" ethernet hwaddr "$(cat ${devpath}/address)" role ''
fi
