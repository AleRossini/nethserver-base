#!/usr/bin/perl

use esmith::ConfigDB;
use esmith::HostsDB;
use File::stat;
use esmith::event;

my $db = esmith::ConfigDB->open_ro('certificates');
my $adb = esmith::ConfigDB->open('accounts');
my $cdb = esmith::ConfigDB->open();
my $ddb = esmith::HostsDB->open_ro();

my $crtdir = "/etc/letsencrypt/live/";
my $lebin = "/usr/bin/letsencrypt";
my $debug = 1;
our $modified = 0;

sub renew {
    my $domain = shift;
    my $webroot = shift;
    my $mail = shift;

    my $opts = "--webroot --text --keep-until-expiring --agree-tos --non-interactive";
    if ($mail eq '') {
        $opts .= " --register-unsafely-without-email ";
    } else {
        $opts .= " --email $mail ";
    }

    # file paths
    my $crt = $crtdir.$domain."/cert.pem";
    my $chain = $crtdir.$domain."/chain.pem";
    my $crtdir.$domain."/privkey.pem";
    
    # read the date of certificate link before renewal
    my $tmp = stat($crt);
    my $before = defined($tmp) ? $tmp->mtime : 0;
    

    my $cmd = "$lebin certonly $opts  -w $webroot -d $domain";

    if ($debug) { 
        $cmd .= " --staging -v";
        print $cmd."\n";
    };
    system($cmd);

    # read the date of certificate link after renewal
    $tmp = stat($crt);
    my $after = defined($tmp) ? $tmp->mtime : 0;

    if ($before != $after) {
        $modified++;
        return 1;
    }
    return 0;
}

sub ibay_enabled {
    my $domain = shift;
    foreach $ibay ($adb->get_all_by_prop('type' => 'ibay')) {
        my $httpAliasType = $ibay->prop('HttpAliasType') || "";
        my $httpStatus = $ibay->prop('HttpStatus') || "disabled";
        my $httpVirtualHost = $ibay->prop('HttpVirtualHost') || '';
        my $httpLetsEncrypt = $ibay->prop('HttpLetsEncrypt') || 'disabled';
        if ($httpAliasType eq 'root' && $httpStatus eq 'enabled' && $httpVirtualHost eq $domain) {
            return ($httpLetsEncrypt eq 'enabled');
        }
    }

    return 0;
}

#
# Update SSL properties of the ibay
# associated to the given domain
#
sub update_ibay {
    my $domain = shift;
    foreach $ibay ($adb->get_all_by_prop('type' => 'ibay')) {
        my $httpVirtualHost = $ibay->prop('HttpVirtualHost') || '';
        if ($httpVirtualHost eq $domain) {
            if ($domain eq '__ANY__') { # special case, ibay is root for FQDN
                $domain = $cdb->get_value('SystemName').".".$cdb->get_value('DomainName');
            }
            $adb->set_prop($ibay->key,'HttpChainFile', $crtdir.$domain."/chain.pem");
            $adb->set_prop($ibay->key,'HttpCrtFile', $crtdir.$domain."/cert.pem");
            $adb->set_prop($ibay->key,'HttpKeyFile', $crtdir.$domain."/privkey.pem");
            last;
        }
    }
}

# Certificate for FQDN
my $lets_status = $cdb->get_prop('pki','LetsEncrypt') || 'disabled';
if ($lets_status eq 'enabled') {
    my $fqdn = $cdb->get_value('SystemName').".".$cdb->get_value('DomainName');
    my $webroot = "/var/www/html";
    my $mail = "";

    if (renew($fqdn, $webroot, $mail)) {
        $cdb->set_prop('pki','ChainFile', $crtdir.$fqdn."/chain.pem");
        $cdb->set_prop('pki','CrtFile', $crtdir.$fqdn."/cert.pem");
        $cdb->set_prop('pki','KeyFile', $crtdir.$fqdn."/privkey.pem");
    #    update_ibay('__ANY__');
    }

}


# Certificate for shared folder configured as root http folder
foreach my $host ($ddb->get_all_by_prop('type' => 'self')) {
    my $webroot = "/var/www/html";
    next if (!ibay_enabled($host->key));
    my $mail = '';

    if (renew($host->key,$webroot,$mail)) {
        update_ibay($host->key);
    }
 
}

# Custom certificates
foreach my $cert ($db->get_all_by_prop('type' => 'certificate')) {
    my $domain = $cert->key;
    my $status = $cert->prop('status') || 'disabled';
    next if ($status eq 'disabled');
    my $webroot = $cert->prop('WebRoot') || next;;
    my $mail = $cert->prop('Mail') || '';

    renew($domain,$webroot,$mail);
}


if ($modified > 0) {
   if(esmith::event::event_signal('certificate-update') == 0) {
       exit 1; 
   }
}

exit 0;
