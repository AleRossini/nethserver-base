#!/usr/bin/perl -w

#
# Copyright (C) 2015 Nethesis S.r.l.
# http://www.nethesis.it - support@nethesis.it
# 
# This script is part of NethServer.
# 
# NethServer is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License,
# or any later version.
# 
# NethServer is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with NethServer.  If not, see <http://www.gnu.org/licenses/>.
#

package esmith;

use esmith::NetworksDB;


=head2 validate_networkName_conflict

Returns 'OK' if the key name doesn't yet exist.  Returns a localised error
otherwise.

=cut

my $keyName = shift || die('Missing key name argument');
my $keydb = esmith::NetworksDB->open_ro() || die('Could not open NetworksDB');

my $key = $keydb->get($keyName);
my $type;

if (defined $key)
{
    $type = $key->prop('type');
}
else
{
    exit 0;
}

print "A $type key with the same name already exists\n";
exit 3;
