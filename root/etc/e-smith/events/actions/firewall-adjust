#!/usr/bin/perl

#
# NethServer
#
# Copyright (C) 2012 Nethesis srl
#

use strict;
use esmith::ConfigDB;
use Data::Dumper;

my $event = shift || die("Missing event argument!");
my $confDb = esmith::ConfigDB->open();
my $errors = 0;

my $actions = {
    OPEN => $confDb->get_prop('firewall', 'open'),
    CLOSE => $confDb->get_prop('firewall', 'close'),
    APPLY => $confDb->get_prop('firewall', 'apply')
};


foreach my $serviceRecord ($confDb->get_all_by_prop('type' => 'service')) {
    my $serviceName = $serviceRecord->prop('ServiceFirewallName') || $serviceRecord->key;
    my $statusAction;

    if($serviceRecord->prop('status') ne 'enabled') {
	$statusAction = 'CLOSE';
    } else {
	$statusAction = 'OPEN';
    }

    foreach my $proto (qw(tcp udp)) {
      	my @openPorts = grep { $_ > 0 } (split(',', $serviceRecord->prop(uc($proto) . 'Ports')), $serviceRecord->prop(uc($proto) . 'Port'));

	# Read the kill list to find ports to close:
	my @closePorts = split(',', $serviceRecord->prop('FwAdjust' . uc($proto)));

	# Prepare a unique port list:
	my %ports = map { $_ => 1 } @openPorts, @closePorts;

	foreach my $port (keys %ports) {

	    my $action;

	    # Close any port not in OPEN list:
	    if( ! grep { $port == $_ } @openPorts ) {
		$action = 'CLOSE';
	    } else {
		# Let the service status to decide what to do:
		$action = $statusAction;
	    }

	    my $command = $actions->{$action};

	    $command =~ s/%PROTO/$proto/g;
	    $command =~ s/%PORT/$port/g;
	    $command =~ s/%SERVICE/$serviceName/g;
	    $command =~ s/%ACTION/$action/g;

	    if( ! $command || ! $port > 0) {
		next;
	    }

	    qx($command);

	    if( $? != 0 ) {
		warn "FIREWALL-ADJUST: " . $!;
		$errors ++;
	    } else {
		print "firewall-adjust\@$event: $serviceName $action $proto port $port\n";
	    }
	}	
			       
        # Update the firewall kill list:
	if(@openPorts) {
	    $serviceRecord->set_prop('FwAdjust' . uc($proto), join(',', @openPorts));
	} else {
	    $serviceRecord->delete_prop('FwAdjust' . uc($proto));
	}
    }  
}

my $applyCommand = $actions->{'APPLY'};

if($applyCommand) {
    qx($applyCommand);
    if($? != 0) {
	warn "APPLY: " . $!;
	$errors ++;
    }
}


exit($errors > 0 ? 1 : 0);
