#!/usr/bin/perl -w

#----------------------------------------------------------------------
# copyright (C) 1999-2005 Mitel Networks Corporation
# 
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
# 		
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 		
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307  USA
# 
# Technical support for this program is available from Mitel Networks 
# Please visit our web site www.mitel.com/sme/ for details.
#----------------------------------------------------------------------

package esmith;

use strict;
use Errno;
use esmith::ConfigDB;
use esmith::AccountsDB;

my $conf = esmith::ConfigDB->open_ro;
my $accounts = esmith::AccountsDB->open;

my $event = $ARGV [0];
my $userName = $ARGV [1];

#------------------------------------------------------------
# Create the Unix account
#------------------------------------------------------------

die "username argument missing" unless defined ($userName);

my $acct = $accounts->get($userName);
unless (defined $acct and $acct->prop('type') eq "user")
{
    die "Account $userName is not a user account; create user failed.\n";
}

my $lock = undef;
my $uid;
unless ($uid = $acct->prop('Uid'))
{
    use esmith::lockfile;

    $lock = esmith::lockfile::LockFileOrWait("/home/e-smith/db/accounts");
    $uid = $accounts->get_next_uid;
    $acct->set_prop('Uid', $uid);
    $acct->set_prop('PasswordSet', 'no');
    $acct->set_prop('AllowRSSH', 'no');
    $acct->set_prop('VPNClientAccess', 'no');
}
my $gid = $acct->prop('Gid') || $uid;
my $first = $acct->prop('FirstName') || '';
my $last = $acct->prop('LastName') || '';
my $shell = $acct->prop('Shell') || '/usr/bin/rssh';

# Create the user's unique group first

system(
	"/usr/sbin/lgroupadd",
	"-g",
	$gid,
	$userName
    ) == 0 or die "Failed to create group $userName.\n";

# Add samba group
my $ntgroup = $first.' '.$last;
$ntgroup = $userName unless ($ntgroup ne ' ');
system("/usr/bin/net", "groupmap", "add", "rid=$uid", "unixgroup=$userName", "ntgroup=$ntgroup", "type=domain") == 0
   or warn("Can't create samba group");


# Now create the user account

system(
	"/usr/sbin/luseradd",
	"-u", $uid,
	"-g", $uid,
	"-c", "$first $last",
        "--surname", $last,
	"--givenname", $first,
	"--commonname", "$first $last",
	"-d", "/home/e-smith/files/users/$userName",
	"-k", "/etc/e-smith/skel/user",
	"-s", "$shell",
	$userName
    ) == 0 or die "Failed to create account $userName.\n";

# Release lock if we have one
$lock && esmith::lockfile::UnlockFile($lock);

# Set initial permissions on user's root directory.

chmod 0700, "/home/e-smith/files/users/$userName";

system("/usr/sbin/lgroupmod","-M","$userName","shared")
   and warn("Could not add $userName uset to shared group\n");

system("/usr/sbin/lusermod", "-L", "$userName")
    and warn("Could not lock password for $userName\n");

system("/usr/bin/smbpasswd", "-a", "-d", "$userName")
    and warn("Could not lock smb password for $userName\n");;

exit (0);
