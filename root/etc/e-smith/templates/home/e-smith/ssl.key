{
    use Cwd;
    my $here = getcwd;

    my $FQDN = "$SystemName.$DomainName";
    my $key = "/home/e-smith/ssl.key/$FQDN.key";
    if ( -f $key )
    {
	# Old key file is still good. Read it out - processTemplate will work
	# out that it hasn't changed, and leave the old one in place
	open(K, "$key") or die "Couldn't open key file: $!";
	my @key = <K>;
	chomp @key;
	$OUT = join "\n", @key;
	close(K);
	return;
    }
    # go to somewhere private and safe where we can run programs
    # as root
    unless (-e "/tmp/ssl")
    {
	mkdir "/tmp/ssl", 0700;
    }
    chdir "/tmp/ssl" or die "Couldn't change to secure directory: $!";

    my $program = "/usr/bin/openssl";

    $SIG{ALRM} = sub { die "whoops, $program pipe broke" };

    unless (open(SSL,"-|"))
    {
	exec("/usr/bin/openssl",
	    qw(genrsa -rand),
	    join(':',
	    qw(
		/proc/apm
		/proc/cpuinfo
		/proc/dma
		/proc/filesystems
		/proc/interrupts
		/proc/ioports
		/proc/bus/pci/devices
		/proc/rtc
		/proc/uptime
		)),
	    '2048')
	    || die "can't exec program: $!";
    }
    while (<SSL>)
    {
	$OUT .= $_;
    }
    close(SSL) or die "Closing openssl pipe reported: $!";
    chdir $here;
}
